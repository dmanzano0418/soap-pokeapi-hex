<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

	<!-- ============================================ -->
    <!-- 🔹 PARENT SPRING BOOT -->
    <!-- ============================================ -->
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.5.5</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    
    <!-- ============================================ -->
    <!-- 🔹 METADATA -->
    <!-- ============================================ -->
	<groupId>com.example</groupId>
    <artifactId>soap-pokeapi-hex</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>soap-pokeapi-hex</name>
    <description>Proyecto Spring Boot REST + SOAP + Logs + Masking + Hexagonal Architecture</description>
    
    <!-- ============================================ -->
    <!-- 🔹 PROPERTIES / VERSIONES CENTRALIZADAS -->
    <!-- ============================================ -->
	<properties>
        <java.version>17</java.version>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        
        <!-- MapStruct -->
        <org.mapstruct.version>1.6.3</org.mapstruct.version>
        <lombok.mapstruct.binding.version>0.2.0</lombok.mapstruct.binding.version>
        <lombok.version>1.18.34</lombok.version>
        
        <!-- Testing / Coverage -->
        <jacoco.version>0.8.13</jacoco.version>
    </properties>
	
	<!-- ============================================ -->
    <!-- 🔹 DEPENDENCIAS -->
    <!-- ============================================ -->
	<dependencies>
		
		<!-- Core Spring Boot (REST + JSON con Jackson) -->
		<dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        
        <!-- WebFlux (para PokeAPI via WebClient) -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-webflux</artifactId>
        </dependency>
        
        <!-- SOAP (Spring WS) -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web-services</artifactId>
        </dependency>
        
        <!-- Persistencia JPA / Hibernate -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        
        <!-- Validación con anotaciones Jakarta Bean Validation -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>
        
        <!-- H2 (base en memoria para DEV/TEST) -->
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <scope>runtime</scope>
        </dependency>
        
        <!-- MapStruct -->
        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct</artifactId>
            <version>${org.mapstruct.version}</version>
        </dependency>
        
        <!-- Lombok + Binding con MapStruct -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok-mapstruct-binding</artifactId>
            <version>${lombok.mapstruct.binding.version}</version>
        </dependency>
        
        <!-- Lombok -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <scope>provided</scope>
        </dependency>
        
        <!-- Springdoc OpenAPI + SwaggerUI -->
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
            <version>2.8.10</version>
        </dependency>
        
        <!-- Spring-WS Core (SOAP runtime) -->
        <dependency>
            <groupId>org.springframework.ws</groupId>
            <artifactId>spring-ws-core</artifactId>
        </dependency>

        <!-- TESTING -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <exclusions>
            	<!-- Evitar conflictos con JUnit 4 -->
                <exclusion>
                    <groupId>junit</groupId>
                    <artifactId>junit</artifactId>
                </exclusion>
                <!-- Excluir librería antigua de JSON -->
                <exclusion>
                    <groupId>com.vaadin.external.google</groupId>
                    <artifactId>android-json</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <scope>test</scope>
        </dependency>
        
        <!-- Configuration Processor (autocompletado YAML en IDE) -->
        <!-- Procesador de Configuración (genera spring-configuration-metadata.json) -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>
	</dependencies>

	<!-- ============================================ -->
    <!-- 🔹 PLUGINS DE BUILD -->
    <!-- ============================================ -->
	<build>
		<plugins>
		
			<!-- Spring Boot Maven Plugin (empaquetado y ejecución) -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			
			<!-- Maven Compiler Plugin (Java 17 + MapStruct + Lombok) -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<annotationProcessorPaths>
						<path>
							<groupId>org.mapstruct</groupId>
							<artifactId>mapstruct-processor</artifactId>
							<version>${org.mapstruct.version}</version>
						</path>
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
							<version>${lombok.version}</version>
						</path>
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok-mapstruct-binding</artifactId>
							<version>${lombok.mapstruct.binding.version}</version>
						</path>
					</annotationProcessorPaths>
					<compilerArgs>
						<!-- MapStruct integrado con Spring -->
						<compilerArg>-Amapstruct.defaultComponentModel=spring</compilerArg>
						<!-- Verbose: logs detallados de generación -->
                        <compilerArg>-Amapstruct.verbose=true</compilerArg>
                        <!-- Forzar que se empaquete el metadata -->
        				<compilerArg>-parameters</compilerArg>
					</compilerArgs>
				</configuration>
			</plugin>

			<!-- JAXB Maven Plugin (generación de clases java desde XSD) -->
			<plugin>
                <groupId>org.jvnet.jaxb</groupId>
                <artifactId>jaxb-maven-plugin</artifactId>
                <version>4.0.9</version>
                <executions>
                    <execution>
                        <id>generate-jaxb</id>
                        <!-- Ejecutar en la fase generate-sources para que las clases estén disponibles en compile -->
            			<phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                        	<!-- Directorio donde están los XSD -->
                        	<schemaDirectory>${project.basedir}/src/main/resources/wsdl</schemaDirectory>
                            
                            <!-- Archivo XSD a procesar -->
			                <schemas>
			                    <schema>
			                        <fileset>
			                            <directory>${project.basedir}/src/main/resources/wsdl</directory>
			                            <includes>
			                                <include>pokemon.xsd</include>
			                                <include>error-detail.xsd</include>
			                            </includes>
			                        </fileset>
			                    </schema>
			                </schemas>
			                
			                <!-- Carpeta de salida para las clases generadas -->
                			<generateDirectory>${project.build.directory}/generated-sources/jaxb</generateDirectory>
                			
                			<!-- Forzar regeneración (útil en dev) -->
                			<forceRegenerate>true</forceRegenerate>
                			
                			<!-- Paquete destino para clases generadas -->
			                <args>
			                    <arg>-p</arg>
			                    <arg>com.example.pokemon.soap.schemas</arg>
			                    <!-- -extension permite extensiones del XJC si fueran necesarias -->
			                    <arg>-extension</arg>
			                </args>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

			<!-- JaCoCo Plugin (cobertura de código para SonarQube u otros análisis) -->
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco.version}</version>
				<executions>
					<execution>
						<id>jacoco-report</id>
						<phase>verify</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<destFile>${sonar.jacoco.reportPaths}</destFile>
					<output>file</output>
					<append>true</append>
					<excludes>
						<exclude>*MethodAccess</exclude>
					</excludes>
				</configuration>
			</plugin>

			<!-- Build Helper (a?ade directorio generado por JAXB al classpath) -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>add-jaxb-sources</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>
									${project.build.directory}/generated-sources/jaxb</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
